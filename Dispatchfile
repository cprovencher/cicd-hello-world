#!mesosphere/dispatch-starlark:v0.8-beta1

load("github.com/mesosphere/dispatch-catalog/starlark/stable/pipeline@0.0.6", "git_resource", "git_checkout_dir", "pull_request", "cron", "tag", "push")
load("github.com/cprovencher/import-dispatch-task-test/lints@0505574453ce1f7c4edd97bc6b44d85d184e45c6", "shellcheck")
load("github.com/mesosphere/dispatch-catalog/starlark/stable/k8s@0.0.7", "secret_var")

source_repo = git_resource("sources")

do_shellcheck = shellcheck("a-b", git_input=source_repo, paths=["script.sh"])

action(tasks=[do_shellcheck], on=pull_request())
action(name="B", on=cron(schedule="1 1 1 1 1"), tasks=[do_shellcheck])
action(name="release-test", tasks=[do_shellcheck], on=p.Condition(release=p.ReleaseCondition(tags=["testtag"])))

git = "src-git"
git_resource(git)

gitops = "gitops-git"
git_resource(
  gitops,
  url="https://github.com/cprovencher/cicd-hello-world-gitops",
  revision="master")

DIND_IMAGE = "mesosphere/kommander-ci:1-3066ab8"


def npm_script_step(name, script, image=DIND_IMAGE, resources={
    "cpu": k8s.resource_quantity("1"),
    "memory": k8s.resource_quantity("2Gi")
}, env=[]):
    return v1.Container(
        name=name,
        image=image,
        workingDir="$(inputs.resources.{preparedapp}.path)".format(preparedapp=prepared_app),
        args=["npm", "run", script],
        resources=k8s.corev1.ResourceRequirements(
            limits=resources,
            requests=resources
        ),
        env=env
    )


release = "release"
dind_task(release, inputs=[prepared_app, code_checks, git_changes, kommander_e2e],
     steps=[
         untar_step(),
         npm_script_step(
             "release",
             "semantic-release -- --ci",
             image=DIND_IMAGE,
             resources={
                "cpu": k8s.resource_quantity("4"),
                "memory": k8s.resource_quantity("10Gi")
             },
             env=[
                k8s.corev1.EnvVar(name="JIRA_USER", value="svc.mergebot"),
                k8s.corev1.EnvVar(name="JIRA_PASS", valueFrom=secret_var("jira-creds", "JIRA_PASS")),
                k8s.corev1.EnvVar(name="CI", value="true"),
                k8s.corev1.EnvVar(name="GITHUB_USER", valueFrom=secret_var("d2iq-dispatch-basic-auth", "username")),
                k8s.corev1.EnvVar(name="GITHUB_TOKEN", valueFrom=secret_var("d2iq-dispatch-basic-auth", "password")),
                k8s.corev1.EnvVar(name="GH_TOKEN", valueFrom=secret_var("d2iq-dispatch-basic-auth", "password"))
             ]
        )
     ]
)